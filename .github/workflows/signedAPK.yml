name: Android CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Generate Keystore (JKS → PKCS12)
      run: |
        keytool -genkeypair -v \
          -keystore android-auto-key.keystore \
          -alias key \
          -keyalg RSA -keysize 2048 -validity 10000 \
          -dname "CN=Android, OU=Mobile, O=Company, L=City, ST=State, C=US" \
          -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
          -keypass "${{ secrets.KEY_PASSWORD }}"

        keytool -importkeystore \
          -srckeystore android-auto-key.keystore \
          -destkeystore android-auto-key.p12 \
          -srcstoretype JKS \
          -deststoretype PKCS12 \
          -srcstorepass "${{ secrets.KEYSTORE_PASSWORD }}" \
          -deststorepass "${{ secrets.KEYSTORE_PASSWORD }}"

        # Keystore 파일을 Base64로 변환하여 GitHub Secrets에서 사용할 수 있도록 함
        base64 android-auto-key.p12 > android-auto-key.keystore.b64

    - name: Debug Keystore
      run: |
        echo "Checking Keystore file..."
        ls -lh android-auto-key.keystore

    - name: Build release APK
      run: ./gradlew app:assembleFullRelease

    - name: Setup build tool version variable
      shell: bash
      run: |
        BUILD_TOOLS_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
        echo "BUILD_TOOLS_VERSION=$BUILD_TOOLS_VERSION" >> $GITHUB_ENV
        echo "Last build tool version is: $BUILD_TOOLS_VERSION"

    - name: Debug APK before signing
      run: |
        echo "Checking APK files before signing..."
        ls -lh app/build/outputs/apk/full/release/

    - name: Align APK
      run: |
        echo "Running zipalign..."
        $ANDROID_HOME/build-tools/$BUILD_TOOLS_VERSION/zipalign -v 4 \
          app/build/outputs/apk/full/release/app-full-release-unsigned.apk \
          app/build/outputs/apk/full/release/app-full-release-aligned.apk \
        && echo "zipalign completed successfully."

    - name: Debug APK after zipalign
      run: |
        echo "Checking APK files after zipalign..."
        ls -lh app/build/outputs/apk/full/release/

    - name: Sign APK using apksigner
      run: |
        echo "Signing with apksigner..."
        $ANDROID_HOME/build-tools/$BUILD_TOOLS_VERSION/apksigner sign --ks android-auto-key.keystore \
          --ks-key-alias ${{ secrets.ALIAS }} \
          --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} \
          --key-pass pass:${{ secrets.KEY_PASSWORD }} \
          app/build/outputs/apk/full/release/app-full-release-aligned.apk \
        && echo "APK signing completed successfully."

    - name: Debug APK after signing
      run: |
        echo "Checking APK files after signing..."
        ls -lh app/build/outputs/apk/full/release/

    - name: Verify Signed APK
      run: |
        echo "Verifying signed APK..."
        $ANDROID_HOME/build-tools/$BUILD_TOOLS_VERSION/apksigner verify \
          --print-certs app/build/outputs/apk/full/release/app-full-release-aligned.apk \
        && echo "APK verification successful."

    - name: Upload APK Release
      uses: actions/upload-artifact@v4
      with:
        name: APK release generated
        path: app/build/outputs/apk/full/release/app-full-release-aligned.apk
