{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "6506c6dd90b9179a8f378584acff46c7",
    "entities": [
      {
        "tableName": "equilHistoryPump",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`timestamp` INTEGER NOT NULL, `code` INTEGER NOT NULL, `battery` INTEGER NOT NULL, `insulin` INTEGER NOT NULL, `rate` INTEGER NOT NULL, `largeRate` INTEGER NOT NULL, `type` INTEGER NOT NULL, `eventIndex` INTEGER NOT NULL, `level` INTEGER NOT NULL, `parm` INTEGER NOT NULL, `port` INTEGER NOT NULL, `eventTimestamp` INTEGER NOT NULL, PRIMARY KEY(`timestamp`))",
        "fields": [
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "battery",
            "columnName": "battery",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "insulin",
            "columnName": "insulin",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rate",
            "columnName": "rate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "largeRate",
            "columnName": "largeRate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventIndex",
            "columnName": "eventIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "level",
            "columnName": "level",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parm",
            "columnName": "parm",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "port",
            "columnName": "port",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventTimestamp",
            "columnName": "eventTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "timestamp"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_equilHistoryPump_code_timestamp_eventTimestamp_eventIndex",
            "unique": false,
            "columnNames": [
              "code",
              "timestamp",
              "eventTimestamp",
              "eventIndex"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_equilHistoryPump_code_timestamp_eventTimestamp_eventIndex` ON `${TABLE_NAME}` (`code`, `timestamp`, `eventTimestamp`, `eventIndex`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "equilHistoryRecord",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`timestamp` INTEGER NOT NULL, `type` TEXT NOT NULL, `eventTimestamp` INTEGER NOT NULL, `serialNumber` TEXT NOT NULL, `tempBasalRecord_duration` INTEGER, `tempBasalRecord_rate` REAL, `tempBasalRecord_startTime` INTEGER, `bolusRecord_amout` REAL, `bolusRecord_bolusType` TEXT, `bolusRecord_startTime` INTEGER, PRIMARY KEY(`timestamp`))",
        "fields": [
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventTimestamp",
            "columnName": "eventTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serialNumber",
            "columnName": "serialNumber",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tempBasalRecord.duration",
            "columnName": "tempBasalRecord_duration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "tempBasalRecord.rate",
            "columnName": "tempBasalRecord_rate",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "tempBasalRecord.startTime",
            "columnName": "tempBasalRecord_startTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "bolusRecord.amout",
            "columnName": "bolusRecord_amout",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "bolusRecord.bolusType",
            "columnName": "bolusRecord_bolusType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "bolusRecord.startTime",
            "columnName": "bolusRecord_startTime",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "timestamp"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_equilHistoryRecord_type_timestamp",
            "unique": false,
            "columnNames": [
              "type",
              "timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_equilHistoryRecord_type_timestamp` ON `${TABLE_NAME}` (`type`, `timestamp`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '6506c6dd90b9179a8f378584acff46c7')"
    ]
  }
}